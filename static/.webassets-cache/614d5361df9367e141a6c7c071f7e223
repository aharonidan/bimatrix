V$(document).ready(function() {\u000a  var create_matrix, setAttributes;\u000a  setAttributes = function(el, attrs) {\u000a    var k, key, len, results1;\u000a    results1 = [];\u000a    for (k = 0, len = attrs.length; k < len; k++) {\u000a      key = attrs[k];\u000a      results1.push(el.setAttribute(key, attrs[key]));\u000a    }\u000a    return results1;\u000a  };\u000a  create_matrix = function(rows, cols) {\u000a    var bimatrix, c, d, i, inp1, inp2, j, row;\u000a    d = document.createElement('td');\u000a    bimatrix = document.getElementById('table');\u000a    d.className = 'cell';\u000a    bimatrix.innerHTML = '';\u000a    i = 0;\u000a    while (i < rows) {\u000a      row = document.createElement('tr');\u000a      j = 0;\u000a      while (j < cols) {\u000a        c = d.cloneNode(false);\u000a        inp1 = document.createElement('input');\u000a        setAttributes(inp1, {\u000a          'row': i,\u000a          'col': j,\u000a          'required': 'true',\u000a          'type': 'number',\u000a          'min': 0\u000a        });\u000a        inp1.setAttribute('row', i);\u000a        inp1.setAttribute('col', j);\u000a        inp1.setAttribute('required', 'true');\u000a        inp1.setAttribute('type', 'number');\u000a        inp2 = inp1.cloneNode(false);\u000a        inp1.className = 'A_entry';\u000a        inp2.className = 'B_entry';\u000a        c.appendChild(inp1);\u000a        c.appendChild(inp2);\u000a        row.appendChild(c);\u000a        j++;\u000a      }\u000a      bimatrix.appendChild(row);\u000a      i++;\u000a    }\u000a    $('form#bimatrix input[name="hidden_m"]').val(rows);\u000a    $('form#bimatrix input[name="hidden_n"]').val(cols);\u000a  };\u000a  create_matrix(2, 2);\u000a  $('form.dimensions').on('submit', function() {\u000a    var m, n;\u000a    m = $('input#number_m').val();\u000a    n = $('input#number_n').val();\u000a    create_matrix(m, n);\u000a  });\u000a  $('form#bimatrix .random').on('click', function() {\u000a    $.each($('form#bimatrix').find(':input:not([type=hidden])'), function(index, input) {\u000a      var rand;\u000a      rand = Math.floor(Math.random() * 10) + 1;\u000a      $(input).val(rand);\u000a    });\u000a    return false;\u000a  });\u000a  $('form#bimatrix').on('submit', function() {\u000a    var build_equilbria_table, collect_matrix, cols, matrices, rows, show_results;\u000a    build_equilbria_table = function(equilibria) {\u000a      var eq_table;\u000a      eq_table = $('#eq-table tbody')[0];\u000a      eq_table.innerHTML = '';\u000a      $.each(equilibria, function(i, eq) {\u000a        var number, pay1, pay2, row, st1, st2;\u000a        row = document.createElement('tr');\u000a        eq_table.appendChild(row);\u000a        number = document.createElement('td');\u000a        st1 = document.createElement('td');\u000a        pay1 = document.createElement('td');\u000a        st2 = document.createElement('td');\u000a        pay2 = document.createElement('td');\u000a        row.appendChild(number);\u000a        row.appendChild(st1);\u000a        row.appendChild(pay1);\u000a        row.appendChild(st2);\u000a        row.appendChild(pay2);\u000a        number.innerHTML = i + 1;\u000a        st1.innerHTML = eq[0]['distribution'];\u000a        st2.innerHTML = eq[1]['distribution'];\u000a        pay1.innerHTML = eq[0]['payoff'];\u000a        return pay2.innerHTML = eq[1]['payoff'];\u000a      });\u000a    };\u000a    show_results = function(results) {\u000a      var comp_table;\u000a      comp_table = $('#comp-table tbody')[0];\u000a      comp_table.innerHTML = '';\u000a      $.each(results, function(i, comp_value) {\u000a        var cell, eq_cell, row;\u000a        row = document.createElement('tr');\u000a        cell = document.createElement('td');\u000a        cell.innerHTML = i + 1;\u000a        row.appendChild(cell);\u000a        comp_table.appendChild(row);\u000a        eq_cell = document.createElement('td');\u000a        row.appendChild(eq_cell);\u000a        $.each(comp_value, function(eq_name, eq_value) {\u000a          var cell1, cell2, cell3, eq_row, index_cell;\u000a          if (eq_name === 'index') {\u000a            index_cell = document.createElement('td');\u000a            index_cell.innerHTML = 'index: ' + eq_value;\u000a            row.appendChild(index_cell);\u000a          } else {\u000a            eq_row = document.createElement('tr');\u000a            cell1 = document.createElement('td');\u000a            cell2 = document.createElement('td');\u000a            cell3 = document.createElement('td');\u000a            cell2.innerHTML = ', x: [' + eq_value['x'] + ']';\u000a            cell3.innerHTML = ', y: [' + eq_value['y'] + ']';\u000a            cell1.innerHTML = 'lex-index: ' + eq_value['lexindex'];\u000a            eq_row.appendChild(cell1);\u000a            eq_row.appendChild(cell2);\u000a            eq_row.appendChild(cell3);\u000a            eq_cell.appendChild(eq_row);\u000a          }\u000a        });\u000a      });\u000a    };\u000a    collect_matrix = function(rows, cols) {\u000a      var A_values, B_values, form, i, j;\u000a      A_values = [];\u000a      B_values = [];\u000a      form = $('form#bimatrix');\u000a      i = 0;\u000a      while (i < rows) {\u000a        A_values.push([]);\u000a        B_values.push([]);\u000a        j = 0;\u000a        while (j < cols) {\u000a          A_values[i].push(form.find('input[row=' + i + '][col=' + j + '].A_entry').val());\u000a          B_values[i].push(form.find('input[row=' + i + '][col=' + j + '].B_entry').val());\u000a          j++;\u000a        }\u000a        i++;\u000a      }\u000a      return [A_values, B_values];\u000a    };\u000a    rows = $(this).find('input[name="hidden_m"]').val();\u000a    cols = $(this).find('input[name="hidden_n"]').val();\u000a    matrices = collect_matrix(parseInt(rows), parseInt(cols));\u000a    $('.overlay').show();\u000a    $.ajax({\u000a      type: 'POST',\u000a      url: '/',\u000a      data: {\u000a        'A': JSON.stringify(matrices[0]),\u000a        'B': JSON.stringify(matrices[1]),\u000a        'm': rows,\u000a        'n': cols\u000a      },\u000a      success: function(results) {\u000a        build_equilbria_table(results['equilibria']);\u000a        show_results(results['components']);\u000a      },\u000a      error: function(error) {\u000a        console.log(error);\u000a      }\u000a    });\u000a    $('.overlay').hide();\u000a  });\u000a});\u000a
p1
.